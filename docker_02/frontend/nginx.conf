events {}     #网络连接事件配置（必须有）

http {        #HTTP 服务相关配置的顶级块

    server {         #定义一个监听端口的网站服务
        listen 80;

#当用户访问网站根路径 /（例如 http://localhost:8080/）时，NGINX 会：
#从指定的目录 /usr/share/nginx/html 中
#查找名为 index.html 的文件,把它当作网页内容返回给浏览器。
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
        location /api {
            proxy_pass http://ecs-backend:3000;    #将该请求 反向代理 给名为 ecs-backend 的服务（也就是 Flask 容器），它监听 3000 端口
            proxy_set_header Host $host;           #把原请求的 Host 头部转发给后端，这有助于后端识别请求来源
            proxy_set_header X-Real-IP $remote_addr;         #设置真实客户端 IP 给后端，有些后端服务需要这个做日志或权限判断
        }
    }
}


'''
location /api/hello 限制路由，需支持 /api/*
意思：
在 Nginx 配置中，location /api/hello 是一个精确路径匹配，只会处理请求路径完全等于 /api/hello 的请求（例如 http://localhost:8080/api/hello）。
它不会匹配其他以 /api/ 开头的路径（如 /api/other 或 /api/test），因此限制了路由的灵活性。
改为 location /api（前缀匹配）可以支持所有以 /api/ 开头的路径（即 /api/*），例如 /api/hello、/api/other 等。
为什么需要：
你的 Flask 后端可能有多个 API 端点（目前是 /api/hello，未来可能添加 /api/other）。
使用 location /api 确保 Nginx 将所有 /api/* 请求代理到后端（http://ecs-backend:3000），无需为每个端点单独配置。
'''